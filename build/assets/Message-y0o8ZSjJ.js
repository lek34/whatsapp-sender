import{r as d,j as e}from"./index-D4Ddltd5.js";import{a as B,r as k,u as F,S as a}from"./axios-kRgXoQhS.js";import{C as I,a as E}from"./CRow-DMjowzGT.js";import{C as M,a as P}from"./CCardBody-HCNMLPT6.js";import{C as T}from"./CCardHeader-BmkCMfNv.js";import{C as R}from"./CForm-Bd6HCFkr.js";import{b as x}from"./index.esm-DVwSU7ju.js";import{C as O}from"./CInputGroup-B2QZZNvZ.js";import{C as g}from"./CFormInput-C5aBT7wH.js";import{C as U}from"./CFormTextarea-0__5jFzi.js";import{C as W}from"./CButton-CtFRGoiF.js";import"./CFormControlWrapper---ddIf9L.js";import"./CFormControlValidation-BrZu_tOP.js";async function Y(l){return await(await B.post("http://localhost:8080/api/v1/sendmessage",l,{headers:{"API-KEY":"124421412414141"}})).data}const X=()=>{const l=d.useRef(null),[m,u]=d.useState(""),[p,h]=d.useState(""),C=r=>{a.fire({title:"Select Row and Column",html:`
            <p>Select the row and column for the phone numbers:</p>
            <input id="col-input" type="text" placeholder="Column letter (e.g., A)" style="width: 100%; margin-top: 10px;" />
            <input id="row-input" type="number" placeholder="Starting Row number" min="1" style="width: 100%; margin-top: 10px;" />
          `,showCancelButton:!0,confirmButtonText:"Submit",preConfirm:()=>{const s=document.getElementById("row-input").value,n=document.getElementById("col-input").value.toUpperCase();return!s||!n||n.length!==1||!/^[A-Z]$/.test(n)?(a.showValidationMessage("Please enter valid row number and column letter."),!1):{row:parseInt(s),col:n}}}).then(s=>{if(s.isConfirmed){const{row:n,col:c}=s.value,o=c.charCodeAt(0)-65,i=r.map(t=>t[o]?t[o].toString():null).slice(n-1).filter(t=>t).map(t=>t.startsWith("08")?"62"+t.substring(1):t.startsWith("8")?"62"+t:t);i.length>0?u(i.join(", ")):a.fire({title:"Error!",text:"No phone numbers found in the specified range.",icon:"error",confirmButtonText:"Ok"})}})},w=()=>m.trim()===""||p.trim()===""?(a.fire({title:"Validation Error",text:"Phone Number and Message cannot be empty!",icon:"warning",confirmButtonText:"Ok"}),!1):!0,b=r=>{var c;const s=(c=r.target.files)==null?void 0:c[0];if(!s)return;const n=new FileReader;n.onload=o=>{var t;const i=(t=o.target)==null?void 0:t.result;if(i&&typeof i=="object"){const S=new Uint8Array(i),f=k(S,{type:"array"}),N=f.SheetNames[0],v=f.Sheets[N],A=F.sheet_to_json(v,{header:1});C(A)}},n.readAsArrayBuffer(s)},y=async()=>{if(!w())return;const s=m.split(",").map(o=>o.trim()).map(async o=>await Y({recipient:o,message:p}));(await Promise.all(s)).every(o=>o.error==="false")?(u(""),h(""),l.current&&(l.current.value=""),a.fire({title:"Success!",text:"All messages sent successfully!",icon:"success",confirmButtonText:"Ok"})):a.fire({title:"Error!",text:"Some messages failed to send.",icon:"error",confirmButtonText:"Ok"})},j=()=>{a.fire({title:"Warning!",text:"Apakah Yakin Untuk Mengirim Pesan ?",icon:"warning",showCancelButton:!0,cancelButtonText:"No",confirmButtonText:"Yes"}).then(r=>{r.isConfirmed&&y()})};return e.jsx(I,{children:e.jsx(E,{xs:12,children:e.jsxs(M,{className:"mb-4",children:[e.jsx(T,{children:e.jsx("strong",{children:"Send Message"})}),e.jsx(P,{children:e.jsxs(R,{onSubmit:r=>{r.preventDefault(),j()},children:[e.jsxs("div",{className:"mb-3",children:[e.jsx(x,{htmlFor:"phoneNumber",children:"Phone Number"}),e.jsxs(O,{className:"mb-3",children:[e.jsx(g,{type:"file",id:"fileInput",ref:l,onChange:b}),e.jsx(g,{type:"text",id:"phoneNumber",value:m,onChange:r=>u(r.target.value)})]})]}),e.jsxs("div",{className:"mb-3",children:[e.jsx(x,{htmlFor:"message",children:"Message"}),e.jsx(U,{id:"message",rows:3,value:p,onChange:r=>h(r.target.value)})]}),e.jsx(W,{color:"primary",type:"submit",children:"Send"})]})})]})})})};export{X as default};
